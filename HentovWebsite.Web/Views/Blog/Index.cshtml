@using HentovWebsite.Models.Enums
@using Microsoft.AspNet.Identity
@model HentovWebsite.Models.View.Blog.PostCollectionViewModel

@{
    ViewBag.Title = "Blog - Hentov.NET";
}

@foreach (var post in Model.Posts)
{
    <div class="container">
        <div class="left-panel">
            <div class="col-xs-12 col-md-12 col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="col-md-12">
                            <div class="icerik-bilgi" id="blog-post-title">
                                <a href=@Url.Action("Post", "Blog" , new {id=@post.Id})>
                                    <h2>@post.Title</h2>
                                </a>
                                <p>@(post.Content.Length > 300 ? post.Content.Substring(0, 300) + "..." : post.Content)</p>
                                <div class="btn-group">
                                    <h5>@post.AuthorName - @post.DatePosted</h5>
                                    <div id="post-stats">
                                        <span id= @string.Format("post-stats-{0}", post.Id))>
                                            <span id= @string.Format("post-likes-{0}", post.Id)>
                                                @post.Likes
                                            </span>
                                            @Ajax.ActionLink("Like", "LikePost", new{postId = post.Id, userId = User.Identity.GetUserId(), authorized = User.Identity.IsAuthenticated}, new AjaxOptions
                                            {
                                            HttpMethod = "GET",
                                            InsertionMode = InsertionMode.Replace,
                                            UpdateTargetId = $"post-likes-{post.Id}"
                                            }, new {@class="btn btn-success"})

                                            @Ajax.ActionLink("Dislike", "DislikePost", new{postId = post.Id, userId = User.Identity.GetUserId(), authorized = User.Identity.IsAuthenticated}, new AjaxOptions
                                            {
                                            HttpMethod = "GET",
                                            InsertionMode = InsertionMode.Replace,
                                            UpdateTargetId = $"post-likes-{post.Id}"
                                            }, new {@class="btn btn-danger"})
                                        </span>
                                    </div>
                                </div>
                                <div class="pull-right">
                                    <a href=@Url.Action("Post", "Blog" , new {id=@post.Id})>
                                        <button type="button" class="btn btn-primary">
                                            <span class="btn btn-google">Read more<i class="fa fa-chevron-right"></i></span>
                                        </button>
                                    </a>
                                </div>
                                @if (User.IsInRole(UserRoles.Admin.ToString()))
                                {
                                @Html.ActionLink("Edit", "Edit", post, new {@class = "btn btn-submit"})
                                @Html.ActionLink("Delte", "Delete", post, new { @class = "btn btn-submit" })
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
